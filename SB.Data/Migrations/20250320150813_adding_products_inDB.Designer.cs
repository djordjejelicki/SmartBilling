// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SB.Data;

#nullable disable

namespace SB.Data.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    [Migration("20250320150813_adding_products_inDB")]
    partial class adding_products_inDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SB.Models.Bill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("SB.Models.BillItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("BillId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.HasIndex("ProductId");

                    b.ToTable("BillItems");
                });

            modelBuilder.Entity("SB.Models.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("SB.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("113e7663-2cac-45c6-b349-b6189d9c3f4d"),
                            Description = "Modern bycycle for ride",
                            Name = "Bicycle",
                            Price = 250.0
                        },
                        new
                        {
                            Id = new Guid("1a24b23a-4e82-4413-af4d-fcd45aecb01a"),
                            Description = "Working desk",
                            Name = "Desk",
                            Price = 190.0
                        },
                        new
                        {
                            Id = new Guid("21bbe837-b363-46c0-b3ad-41a5d4b7758a"),
                            Description = "Office chair",
                            Name = "Chair",
                            Price = 120.0
                        },
                        new
                        {
                            Id = new Guid("7d3c4e45-6103-4271-8438-a445220137e3"),
                            Description = "Apple smart phone",
                            Name = "Iphone 14",
                            Price = 750.0
                        },
                        new
                        {
                            Id = new Guid("aefcc042-ece1-472c-96be-26211771a5e5"),
                            Description = "Modern House Lamp",
                            Name = "Lamp",
                            Price = 60.0
                        });
                });

            modelBuilder.Entity("SB.Models.Bill", b =>
                {
                    b.HasOne("SB.Models.Customer", "BillCustomer")
                        .WithMany("Bills")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BillCustomer");
                });

            modelBuilder.Entity("SB.Models.BillItem", b =>
                {
                    b.HasOne("SB.Models.Bill", null)
                        .WithMany("BillItems")
                        .HasForeignKey("BillId");

                    b.HasOne("SB.Models.Product", "BillProduct")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BillProduct");
                });

            modelBuilder.Entity("SB.Models.Bill", b =>
                {
                    b.Navigation("BillItems");
                });

            modelBuilder.Entity("SB.Models.Customer", b =>
                {
                    b.Navigation("Bills");
                });
#pragma warning restore 612, 618
        }
    }
}
