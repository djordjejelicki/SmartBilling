// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SB.Data;

#nullable disable

namespace SB.Data.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    partial class ApiDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SB.Models.Bill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("SB.Models.BillItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("BillId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.HasIndex("ProductId");

                    b.ToTable("BillItems");
                });

            modelBuilder.Entity("SB.Models.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f3b1d4a8-7c2d-4f84-81df-2a5e3b671e1b")
                        },
                        new
                        {
                            Id = new Guid("c7e04f65-3b97-4b11-99b8-09d56dc8d25a")
                        },
                        new
                        {
                            Id = new Guid("a5d8f1ea-66b9-4f4e-bc9b-8f6395f5d2f2")
                        },
                        new
                        {
                            Id = new Guid("e3f4a9b2-2d78-4db8-8bfc-cd08c2a7a9f3")
                        },
                        new
                        {
                            Id = new Guid("6b29fc40-68a2-4b80-91b4-914a5f2b7f04")
                        });
                });

            modelBuilder.Entity("SB.Models.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = new Guid("20b5d218-e87b-42cc-9568-ef69ab1b2945"),
                            Name = "Djordje",
                            Surname = "Jelicki"
                        },
                        new
                        {
                            Id = new Guid("9ec8a24f-2002-482c-8d8a-12487a87ac6f"),
                            Name = "Igor",
                            Surname = "Skrofanov"
                        },
                        new
                        {
                            Id = new Guid("fc8d4d36-6d32-4455-81ce-bca99786d515"),
                            Name = "Matija",
                            Surname = "Vrebalov"
                        },
                        new
                        {
                            Id = new Guid("2b0bcf24-e190-403c-af44-c47cd4a9171d"),
                            Name = "Stanimir",
                            Surname = "Blazin"
                        },
                        new
                        {
                            Id = new Guid("bbe98bab-c759-446b-a16c-39442e9a0e88"),
                            Name = "Luka",
                            Surname = "Miladinovc"
                        });
                });

            modelBuilder.Entity("SB.Models.EmployeeRoles", b =>
                {
                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.HasKey("EmployeeId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("EmployeeRoles");

                    b.HasData(
                        new
                        {
                            EmployeeId = new Guid("20b5d218-e87b-42cc-9568-ef69ab1b2945"),
                            RoleId = new Guid("9fb572cd-01e2-41b7-b4d9-4efaf06d9449")
                        },
                        new
                        {
                            EmployeeId = new Guid("9ec8a24f-2002-482c-8d8a-12487a87ac6f"),
                            RoleId = new Guid("9fb572cd-01e2-41b7-b4d9-4efaf06d9449")
                        },
                        new
                        {
                            EmployeeId = new Guid("fc8d4d36-6d32-4455-81ce-bca99786d515"),
                            RoleId = new Guid("6305cb2f-0746-4bbb-90c5-d60c2f88da6f")
                        },
                        new
                        {
                            EmployeeId = new Guid("2b0bcf24-e190-403c-af44-c47cd4a9171d"),
                            RoleId = new Guid("2fa92b0d-9373-48e7-a28a-21af57c4b681")
                        },
                        new
                        {
                            EmployeeId = new Guid("bbe98bab-c759-446b-a16c-39442e9a0e88"),
                            RoleId = new Guid("aff40a81-7209-40ed-a5a2-15eb57acd250")
                        });
                });

            modelBuilder.Entity("SB.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("113e7663-2cac-45c6-b349-b6189d9c3f4d"),
                            Description = "Modern bycycle for ride",
                            Name = "Bicycle",
                            Price = 250.0
                        },
                        new
                        {
                            Id = new Guid("1a24b23a-4e82-4413-af4d-fcd45aecb01a"),
                            Description = "Working desk",
                            Name = "Desk",
                            Price = 190.0
                        },
                        new
                        {
                            Id = new Guid("21bbe837-b363-46c0-b3ad-41a5d4b7758a"),
                            Description = "Office chair",
                            Name = "Chair",
                            Price = 120.0
                        },
                        new
                        {
                            Id = new Guid("7d3c4e45-6103-4271-8438-a445220137e3"),
                            Description = "Apple smart phone",
                            Name = "Iphone 14",
                            Price = 750.0
                        },
                        new
                        {
                            Id = new Guid("aefcc042-ece1-472c-96be-26211771a5e5"),
                            Description = "Modern House Lamp",
                            Name = "Lamp",
                            Price = 60.0
                        });
                });

            modelBuilder.Entity("SB.Models.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("RoleName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9fb572cd-01e2-41b7-b4d9-4efaf06d9449"),
                            RoleName = "Cash register officer"
                        },
                        new
                        {
                            Id = new Guid("6305cb2f-0746-4bbb-90c5-d60c2f88da6f"),
                            RoleName = "Security officer"
                        },
                        new
                        {
                            Id = new Guid("2fa92b0d-9373-48e7-a28a-21af57c4b681"),
                            RoleName = "Cash register manager"
                        },
                        new
                        {
                            Id = new Guid("aff40a81-7209-40ed-a5a2-15eb57acd250"),
                            RoleName = "Exchange officer"
                        });
                });

            modelBuilder.Entity("SB.Models.Bill", b =>
                {
                    b.HasOne("SB.Models.Customer", "BillCustomer")
                        .WithMany("Bills")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SB.Models.Employee", "RegisterOfficer")
                        .WithMany("Bills")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BillCustomer");

                    b.Navigation("RegisterOfficer");
                });

            modelBuilder.Entity("SB.Models.BillItem", b =>
                {
                    b.HasOne("SB.Models.Bill", "Bill")
                        .WithMany("BillItems")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SB.Models.Product", "BillProduct")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("BillProduct");
                });

            modelBuilder.Entity("SB.Models.EmployeeRoles", b =>
                {
                    b.HasOne("SB.Models.Employee", "Employee")
                        .WithMany("EmployeeRoles")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SB.Models.Role", "Role")
                        .WithMany("EmployeeRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("SB.Models.Bill", b =>
                {
                    b.Navigation("BillItems");
                });

            modelBuilder.Entity("SB.Models.Customer", b =>
                {
                    b.Navigation("Bills");
                });

            modelBuilder.Entity("SB.Models.Employee", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("EmployeeRoles");
                });

            modelBuilder.Entity("SB.Models.Role", b =>
                {
                    b.Navigation("EmployeeRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
